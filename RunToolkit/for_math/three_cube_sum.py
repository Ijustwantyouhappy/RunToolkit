# -*- coding: utf-8 -*-
# @Time     : 2019/10/14 15:29
# @Author   : Run 
# @File     : three_cube_sum.py
# @Software : PyCharm

"""
todo: collect 100-1000
References:
    1. [人类第一次将33写成了3个整数的立方和](http://duodaa.com/blog/index.php/archives/1857/)
    2. [刚刚，42也被人类写成了三个整数的立方和！](http://duodaa.com/blog/index.php/archives/2009/)
    3. [玩疯了！这回是人类发现了把3写成3个整数立方和的第3种写法！](http://duodaa.com/blog/index.php/archives/2038/)
"""


def check_possibility(num: int) -> bool:
    """
    Check if num mod 9 equals to 4 or 5
    """
    if num % 9 in {4, 5}:
        print('impossible')
        return False
    else:
        print("possible")
        return True


# {x: {(n1, n2, n3), ...}, ...}   x = n1**3 + n2**3 + n3**3
DECOMPOSITION = {
    1: {(-1, 1, 1)},
    2: {(7, -5, -6)},
    3: {(1, 1, 1), (4, 4, -5), (569936821221962380720, -569936821113563493509, -472715493453327032)},
    6: {(-1, -1, 2)},
    7: {(104, 32, -105)},
    8: {(-1, 1, 2)},
    9: {(217, -52, -216)},
    10: {(1, 1, 2)},
    11: {(-2, -2, 3)},
    12: {(7, 10, -11)},
    15: {(-1, 2, 2)},
    16: {(-511, -1609, 1626)},
    17: {(1, 2, 2)},
    18: {(-1, -2, 3)},
    19: {(19, -14, -16)},
    20: {(1, -2, 3)},
    21: {(-11, -14, 16)},
    24: {(-2901096694, -15550555555, 15584139827)},
    25: {(-1, -1, 3)},
    26: {(297, 161, -312)},
    27: {(-1, 1, 3)},
    28: {(14, 13, -17)},
    29: {(1, 1, 3)},
    30: {(-283059965, -2218888517, 2220422932)},
    33: {(8866128975287528, -8778405442862239, -2736111468807040)},
    34: {(-1, 2, 3)},
    35: {(14, -8, -13)},
    36: {(1, 2, 3)},
    37: {(50, 37, -56)},
    38: {(1, -3, 4)},
    39: {(117367, 134476, -159380)},
    42: {(-80538738812075974, 80435758145817515, 12602123297335631)},
    43: {(2, 2, 3)},
    44: {(-5, -7, 8)},
    45: {(2, -3, 4)},
    46: {(-2, 3, 3)},
    47: {(6, 7, -8)},
    48: {(-23, -26, 31)},
    51: {(602, 659, -796)},
    52: {(23961292454, 60702901317, -61922712865)},
    53: {(-1, 3, 3)},
    54: {(-7, -11, 12)},
    55: {(1, 3, 3)},
    56: {(-11, -21, 22)},
    57: {(1, -2, 4)},
    60: {(-1, -4, 5)},
    61: {(845, 668, -966)},
    62: {(3, 3, 2)},
    63: {(7, -4, -6)},
    64: {(-1, 1, 4)},
    65: {(91, 85, -111)},
    66: {(1, 1, 4)},
    69: {(2, -4, 5)},
    70: {(11, 20, -21)},
    71: {(-1, 2, 4)},
    72: {(7, 9, -10)},
    73: {(1, 2, 4)},
    74: {(-284650292555885, 66229832190556, 283450105697727)},
    75: {(4381159, 435203083, -435203231)},
    78: {(26, 53, -55)},
    79: {(-19, -33, 35)},
    80: {(69241, 103532, -112969)},
    81: {(10, 17, -18)},
    82: {(-11, -11, 14)},
    83: {(-2, 3, 4)},
    84: {(-8241191, -41531726, 41639611)},
    87: {(-1972, -4126, 4271)},
    88: {(3, -4, 5)},
    89: {(6, 6, -7)},
    90: {(-1, 3, 4)},
    91: {(364, 192, -381)},
    92: {(1, 3, 4)},
    93: {(-5, -5, 7)},
    96: {(10853, 13139, -15250)},
    97: {(-1, -3, 5)},
    98: {(14, 9, -15)},
    99: {(2, 3, 4)},
    100: {(7, -3, -6)}
}


